[project]
name = "ai-interviewer"
version = "0.1.0"
description = "AI Interviewer Backend"
dependencies = [
    "aiohappyeyeballs==2.4.3",
    "aiohttp==3.10.10",
    "aiosignal==1.3.1",
    "alabaster==1.0.0",
    "altair==5.5.0",
    "annotated-types==0.7.0",
    "anthropic==0.34.2",
    "anyio==4.6.0",
    "astroid==3.3.5",
    "attrs==24.2.0",
    "babel==2.16.0",
    "beanie==1.27.0",
    "black==24.8.0",
    "blinker==1.9.0",
    "cachecontrol==0.14.0",
    "cachetools==5.5.0",
    "certifi==2024.8.30",
    "cffi==1.17.1",
    "charset-normalizer==3.3.2",
    "click==8.1.7",
    "cryptography==43.0.1",
    "dill==0.3.9",
    "distro==1.9.0",
    "dnspython==2.7.0",
    "docstring-parser==0.16",
    "docutils==0.21.2",
    "fastapi==0.115.0",
    "filelock==3.16.1",
    "firebase-admin==6.5.0",
    "frozenlist==1.5.0",
    "fsspec==2024.9.0",
    "gitdb==4.0.12",
    "gitpython==3.1.44",
    "google-api-core==2.20.0",
    "google-auth==2.35.0",
    "google-cloud-core==2.4.1",
    "google-cloud-firestore==2.19.0",
    "google-cloud-storage==2.18.2",
    "google-crc32c==1.6.0",
    "google-resumable-media==2.7.2",
    "googleapis-common-protos==1.65.0",
    "grpcio==1.66.2",
    "grpcio-status==1.66.2",
    "h11==0.14.0",
    "httpcore==1.0.5",
    "httplib2==0.22.0",
    "httpx==0.27.2",
    "huggingface-hub==0.25.1",
    "idna==3.10",
    "imagesize==1.4.1",
    "iniconfig==2.0.0",
    "instructor==1.6.3",
    "isort==5.13.2",
    "jinja2==3.1.4",
    "jiter==0.5.0",
    "jsonschema==4.23.0",
    "jsonschema-specifications==2024.10.1",
    "lazy-model==0.2.0",
    "markdown-it-py==3.0.0",
    "markupsafe==3.0.2",
    "mccabe==0.7.0",
    "mdurl==0.1.2",
    "motor==3.6.0",
    "msgpack==1.1.0",
    "multidict==6.1.0",
    "mypy==1.12.0",
    "mypy-extensions==1.0.0",
    "narwhals==1.26.0",
    "numpy==2.2.3",
    "oauthlib==3.2.2",
    "openai==1.52.2",
    "packaging==24.1",
    "pandas==2.2.3",
    "pathspec==0.12.1",
    "pillow==11.1.0",
    "platformdirs==4.3.6",
    "pluggy==1.5.0",
    "pockets==0.9.1",
    "propcache==0.2.0",
    "proto-plus==1.24.0",
    "protobuf==5.28.2",
    "pyarrow==19.0.0",
    "pyasn1==0.6.1",
    "pyasn1-modules==0.4.1",
    "pycparser==2.22",
    "pydantic==2.9.2",
    "pydantic-core==2.23.4",
    "pydeck==0.9.1",
    "pygments==2.18.0",
    "pyjwt==2.9.0",
    "pymongo==4.9.2",
    "pyparsing==3.1.4",
    "pypubsub==4.0.3",
    "pytest==8.3.3",
    "pytest-asyncio==0.24.0",
    "pytest-mock==3.14.0",
    "python-dateutil==2.9.0.post0",
    "python-dotenv==1.0.1",
    "python-multipart==0.0.12",
    "pytz==2025.1",
    "pyyaml==6.0.2",
    "referencing==0.36.2",
    "requests==2.32.3",
    "requests-oauthlib==2.0.0",
    "rich==13.9.3",
    "rpds-py==0.22.3",
    "rsa==4.9",
    "ruff==0.8.3",
    "shellingham==1.5.4",
    "six==1.16.0",
    "smmap==5.0.2",
    "sniffio==1.3.1",
    "snowballstemmer==2.2.0",
    "sphinx==8.1.3",
    "sphinx-autodoc-typehints==2.5.0",
    "sphinx-rtd-theme==3.0.2",
    "sphinxcontrib-applehelp==2.0.0",
    "sphinxcontrib-devhelp==2.0.0",
    "sphinxcontrib-htmlhelp==2.1.0",
    "sphinxcontrib-jquery==4.1",
    "sphinxcontrib-jsmath==1.0.1",
    "sphinxcontrib-napoleon==0.7",
    "sphinxcontrib-qthelp==2.0.0",
    "sphinxcontrib-serializinghtml==2.0.0",
    "starlette==0.38.6",
    "streamlit==1.42.0",
    "stripe==11.1.0",
    "tenacity==9.0.0",
    "tokenizers==0.20.0",
    "toml==0.10.2",
    "tomlkit==0.13.2",
    "tornado==6.4.2",
    "tqdm==4.66.5",
    "typer==0.12.5",
    "types-pyyaml==6.0.12.20240917",
    "typing-extensions==4.12.2",
    "tzdata==2025.1",
    "uritemplate==4.1.1",
    "urllib3==2.2.3",
    "uvicorn==0.30.6",
    "vulture==2.14",
    "websockets==13.1",
    "yarl==1.17.0",
]

[tool.pytest.ini_options]
pythonpath = "."
testpaths = ["tests"]

[tool.uv]
package = false

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]

# Same as Black.
line-length = 72
indent-width = 4

# Assume Python 3.12
target-version = "py312"

# Fix code automatically
fix = true

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
select = ["E4", "E7", "E9", "F"]
ignore = []

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = true

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"

[tool.mypy]
# Ensure strict type checking
strict = true

# Disallow untyped definitions and calls
disallow_untyped_defs = true
disallow_untyped_calls = true

# Disallow dynamic typing
disallow_any_generics = true
disallow_subclassing_any = true

# Disallow untyped decorators
disallow_untyped_decorators = true

# Disallow implicit optional
no_implicit_optional = true

# Warn about unused ignores
warn_unused_ignores = true

# Warn about return statements with values in functions declared to return None
warn_return_any = true

# Show error codes in error messages
show_error_codes = true

# Ensure all execution paths are returning
warn_no_return = true

# Warn about redundant casts
warn_redundant_casts = true

namespace_packages = true
explicit_package_bases = true
mypy_path = "backend"

exclude = [
    "venv/",
    "app/agents/",
    "app/api/"
]
