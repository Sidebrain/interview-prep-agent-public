[project]
name = "ai-interviewer"
version = "0.1.0"
description = "AI Interviewer Backend"

[tool.pytest.ini_options]
pythonpath = "."
testpaths = ["tests"]

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]

# Same as Black.
line-length = 72
indent-width = 4

# Assume Python 3.12
target-version = "py312"

# Fix code automatically
fix = true

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
select = ["E4", "E7", "E9", "F"]
ignore = []

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = true

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"

[tool.mypy]
# Ensure strict type checking
strict = true

# Disallow untyped definitions and calls
disallow_untyped_defs = true
disallow_untyped_calls = true

# Disallow dynamic typing
disallow_any_generics = true
disallow_subclassing_any = true

# Disallow untyped decorators
disallow_untyped_decorators = true

# Disallow implicit optional
no_implicit_optional = true

# Warn about unused ignores
warn_unused_ignores = true

# Warn about return statements with values in functions declared to return None
warn_return_any = true

# Show error codes in error messages
show_error_codes = true

# Ensure all execution paths are returning
warn_no_return = true

# Warn about redundant casts
warn_redundant_casts = true

namespace_packages = true
explicit_package_bases = true
mypy_path = "backend"

exclude = [
    "venv/",
    "app/agents/",
    "app/api/"
]
